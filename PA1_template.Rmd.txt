---
title: "PA1_template.Rmd"
output: html_document
---


```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```


## Load data




```{r load data, echo=TRUE}
activityData <- read.csv(file="activity.csv", header=TRUE)
```


# What is mean total number of steps taken per day?


## Calculate the total steps taken per day


```{r, echo=TRUE}
totalSteps <- aggregate(steps ~ date, activityData, FUN=sum)
```


## Make a histogram of the total number of steps taken per day


```{r, echo=TRUE}
hist(totalSteps$steps,
     main = "Total Steps per Day",
     xlab = "Number of Steps")
```


## Calculate and report the mean and median of total steps taken per day


```{r, echo=TRUE}
meanSteps <- mean(totalSteps$steps, na.rm = TRUE)
medSteps <- median(totalSteps$steps, na.rm = TRUE)


```


Mean steps per day = 1.1^{4}


Median steps per Day = 10765


#What is the average daily activity pattern?


## Make a time-series plot of the 5-minute interval and the average number of steps taken, averaged acoss all days.


```{r, echo=TRUE}
library(ggplot2)
```


```{r, echo=TRUE}
meanSInt <- aggregate(steps ~ interval, activityData, mean)


ggplot(data = meanSInt, aes(x = interval, y = steps)) +
  geom_line() +
  ggtitle("Average Daily Activity Pattern") +
  xlab("5-minute Interval") +
  ylab("Average Number of Steps") +
  theme(plot.title = element_text(hjust = 0.5))
```


## Which 5-minute interval across all days contain the maximum number of steps


```{r, echo=TRUE}
maxInt <- meanStepsByInt[which.max(meanSInt$steps),]


```


#Imputing Missing Values


## Calculate and report the total number of missing values in the dataset


```{r, echo=TRUE}
missingVals <- is.na(activityData$steps)
```


## Devise a strategy for filling in all of the missing values


17568 missing values.  Replaced with 5-day average.


## Create a new dataset that is equal to the original dataset but with the missing data filled in.


```{r, echo=TRUE}
activityDataAdj <- transform(activityData,steps = ifelse(is.na(activityData$steps),                                             meanSInt$steps[match(activityData$interval, 
        meanSInt$interval)],
        activityData$steps))
```


## Make a histogram of the total number of steps taken each day and and report the mean and median.


```{r, echo=TRUE}
impStepsByInt <- aggregate(steps ~ date, activityDataAdj, FUN=sum)
hist(impSInt$steps,
     main = "Imputed Number of Steps Per Day",
     xlab = "Number of Steps")
```


Difference of 0 (mean steps of two datasets). 
Difference of -1.08^{4} (median steps of two datasets).
Difference of 8.61^{4} (total steps of two datasets).


# Are there differences in activity patterns between weekdays and weekends?


## Create a new factor variable in the dataset with two levels - "weekend" and "weekday"


```{r, echo=TRUE}
DayType <- function(date) {
  day <- weekdays(date)
  if (day %in% c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'))
      return ("weekeday")
  else if (day %in% c('Saturday', 'Sunday'))
      return ("weekend")
  else
      stop ("Invalid Date Format.")
}
activityDataAdj$date <- as.Date(activityDataAdj$date)
activityDataAdj$day <- sapply(activityDataAdj$date, FUN = DayType)
```


## Make a panel plot containnig a time-series plot of the 5-minute interval and the average number of steps taken across all weekdays or weekends


```{r, echo=TRUE}
meanStepsByDay <- aggregate(steps ~ interval + day, activityDataAdj, mean)
ggplot(data = meanStepsByDay, aes(x = interval, y = steps)) + 
  geom_line() +
  facet_grid(day ~ .) +
  ggtitle("Average Daily Activity Pattern") +
  xlab("5 min Interval") +
  ylab("Average Number of Steps") +
  theme(plot.title = element_text(hjust = 0.5))
```